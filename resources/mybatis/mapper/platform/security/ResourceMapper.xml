<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.platform.security.entity.Resource" >
  <resultMap id="BaseResultMap" type="com.cn.platform.security.entity.Resource" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
    
    <result column="CLASS_NAME" property="className" jdbcType="VARCHAR" />
    <result column="DATA_AUTHORITY_CODE" property="dataAuthorityCode" jdbcType="VARCHAR" />
    
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="OPERATION_TYPE" property="operationType" jdbcType="INTEGER" />
    <result column="CODE" property="code" jdbcType="VARCHAR" />
    <result column="PARENT_ID" property="parentId" jdbcType="VARCHAR" />
    <result column="PARENT_NAME" property="parentName" jdbcType="VARCHAR" />
    
    <result column="VALUE" property="value" jdbcType="VARCHAR" />
    <result column="SORT" property="sort" jdbcType="INTEGER" />
    <result column="CP" property="cp" jdbcType="VARCHAR" />
    <result column="CP_NAME" property="cpName" jdbcType="VARCHAR" />
    <result column="CT" property="ct" jdbcType="TIMESTAMP" />
    <result column="EP" property="ep" jdbcType="VARCHAR" />
    <result column="EP_NAME" property="epName" jdbcType="VARCHAR" />
    <result column="ET" property="et" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, NAME, REMARK, TYPE, STATUS, CODE, OPERATION_TYPE,
    PARENT_ID,VALUE, SORT, CP, CP_NAME, CT, EP, EP_NAME, ET, CLASS_NAME ,DATA_AUTHORITY_CODE
  </sql>
  
  <select id="findListByPage" resultMap="BaseResultMap">
    SELECT  if(s.PARENT_ID is null or s.PARENT_ID = '' , s.id , s.PARENT_ID) as sort_field,
    s.id, s.NAME, s.REMARK, s.TYPE, s.STATUS, s.CODE, s.OPERATION_TYPE,
    s.PARENT_ID, s.VALUE, s.SORT, s.CP, s.CP_NAME, s.CT, s.EP, s.EP_NAME, s.ET,s.CLASS_NAME ,s.DATA_AUTHORITY_CODE,
    sr.NAME AS PARENT_NAME
    FROM SYS_RESOURCE s
    LEFT JOIN SYS_RESOURCE sr on s.PARENT_ID = sr.ID 
    <where> 
      s.TYPE = 1 
      <if test="searchValue != null and searchValue != ''" >
         and (s.NAME like CONCAT('%',trim('${searchValue}'),'%' ) or s.CODE like CONCAT('%',trim('${searchValue}'),'%' ))   
      </if>
    </where>
    order by sort_field , s.CT
  </select>
  
  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from SYS_RESOURCE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="findByIds" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from SYS_RESOURCE
    where ID in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
      #{item}
    </foreach>
  </select>

  <delete id="deleteById" parameterType="java.lang.String" >
    delete from SYS_RESOURCE where ID = #{id,jdbcType=VARCHAR}
  </delete>
  
  <delete id="deleteByIds" parameterType="java.util.List" >
    delete from SYS_RESOURCE where ID in 
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
      #{item}
    </foreach>
  </delete>
  
  <insert id="insert" parameterType="com.cn.platform.security.entity.Resource" >
    insert into SYS_RESOURCE (ID, NAME, REMARK, 
      TYPE, STATUS, CODE, OPERATION_TYPE,VALUE,SORT,
      PARENT_ID,CP, CP_NAME, CT, EP, EP_NAME, ET,CLASS_NAME , DATA_AUTHORITY_CODE)
      values (#{id,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR},#{status,jdbcType=INTEGER},#{code,jdbcType=VARCHAR},
      #{operationType,jdbcType=INTEGER},#{value,jdbcType=VARCHAR},#{sort,jdbcType=VARCHAR},
      #{parentId,jdbcType=VARCHAR},#{cp,jdbcType=VARCHAR},#{cpName,jdbcType=VARCHAR}, 
      #{ct,jdbcType=TIMESTAMP}, #{ep,jdbcType=VARCHAR}, #{epName,jdbcType=VARCHAR}, #{et,jdbcType=TIMESTAMP},
      #{className,jdbcType=VARCHAR} , #{dataAuthorityCode,jdbcType=VARCHAR})
  </insert>
  
  <insert id="batchInsert" parameterType="java.util.List">
    insert into SYS_RESOURCE (ID, NAME, REMARK, 
      TYPE, STATUS, CODE, OPERATION_TYPE,VALUE,SORT,
      PARENT_ID,CP, CP_NAME, CT, EP, EP_NAME, ET,CLASS_NAME , DATA_AUTHORITY_CODE)
    values 
    <foreach collection="list" item="resource" index="index" separator="," >
      (#{resource.id,jdbcType=VARCHAR},#{resource.name,jdbcType=VARCHAR},#{resource.remark,jdbcType=VARCHAR}, 
      #{resource.type,jdbcType=VARCHAR},#{resource.status,jdbcType=INTEGER},#{resource.code,jdbcType=VARCHAR},
      #{resource.operationType,jdbcType=INTEGER},#{resource.value,jdbcType=VARCHAR},#{resource.sort,jdbcType=VARCHAR},
      #{resource.parentId,jdbcType=VARCHAR},#{resource.cp,jdbcType=VARCHAR},
      #{resource.cpName,jdbcType=VARCHAR}, #{resource.ct,jdbcType=TIMESTAMP}, #{resource.ep,jdbcType=VARCHAR}, #{resource.epName,jdbcType=VARCHAR}, 
      #{resource.et,jdbcType=TIMESTAMP},#{resource.className,jdbcType=VARCHAR} , #{resource.dataAuthorityCode,jdbcType=VARCHAR})
    </foreach>
  </insert>
  
  <update id="update" parameterType="com.cn.platform.security.entity.Resource" >
    update SYS_RESOURCE
    <set>
    	<if test="name != null and name != ''">
    		NAME = #{name,jdbcType=VARCHAR},
    	</if>
    	<if test="remark != null and remark != ''">
    		REMARK = #{remark,jdbcType=VARCHAR},
    	</if>
    	<if test="type != null and type != ''">
    		TYPE = #{type,jdbcType=VARCHAR},
    	</if>
    	<if test="status != null">
    		STATUS = #{status,jdbcType=INTEGER},
    	</if>
    	<if test="operationType != null">
    		OPERATION_TYPE =  #{operationType,jdbcType=INTEGER},
    	</if>
    	<if test="code != null and code != ''">
    		CODE = #{code,jdbcType=VARCHAR},
    	</if>
    	<if test="parentId != null and parentId != ''">
    		PARENT_ID = #{parentId,jdbcType=VARCHAR},
    	</if>
    	<if test="value != null and value != ''">
    		 VALUE = #{value,jdbcType=VARCHAR},
    	</if>
    	<if test="sort != null and sort != ''">
    		 SORT = #{sort,jdbcType=VARCHAR},
    	</if>
    	<if test="dataAuthorityCode != null and dataAuthorityCode != ''">
    		 DATA_AUTHORITY_CODE = #{dataAuthorityCode,jdbcType=VARCHAR},
    	</if>
    	<if test="className != null and className != ''">
    		 CLASS_NAME = #{className,jdbcType=VARCHAR},
    	</if>
    	<if test="et != null">
    		 ET = #{et,jdbcType=TIMESTAMP},
    	</if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 查找一级菜单 -->
   <select id="findMenuList" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from SYS_RESOURCE
    <where> 
    	TYPE = '1' and (PARENT_ID = '' or PARENT_ID = 'null' or PARENT_ID is null)
    </where>
    ORDER BY SORT
  </select>
  
    <!-- 查找菜单 -->
   <select id="findAllMenuList" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from SYS_RESOURCE
    <where> 
    	TYPE = '1' and STATUS =1
    </where>
  </select>
  
   <!-- 根据parentId查找下级菜单 -->
   <select id="findMenuListByParentId" resultMap="BaseResultMap" parameterType="java.lang.String" >
  	select 
    <include refid="Base_Column_List" />
    from SYS_RESOURCE
    <where> 
    	TYPE = '1' and STATUS = 1 and PARENT_ID = #{resourceId,jdbcType=VARCHAR}
    </where>
    ORDER BY SORT
  </select>
  
    <!-- 根据parentId查找下级资源 -->
   <select id="findResourceByParentCode" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT 
   <include refid="Base_Column_List" />
    FROM SYS_RESOURCE 
   <where> 
        STATUS = 1 and PARENT_ID IN (SELECT ID FROM SYS_RESOURCE WHERE CODE = #{code,jdbcType=VARCHAR})
        <if test="type == 1">
          and TYPE = '1'
        </if>
        <if test="type == 2">
          and TYPE = '2'
        </if>
    </where>
      ORDER BY SORT
  </select>
  
   <!-- 根据parentId查找下级资源 -->
   <select id="findResourceByParentId" resultMap="BaseResultMap" parameterType="java.util.Map" >
  	select 
    <include refid="Base_Column_List" />
    from SYS_RESOURCE
    <where> 
    	TYPE = '2' and STATUS = 1 and PARENT_ID = #{resourceId,jdbcType=VARCHAR}
    </where>
       ORDER BY SORT
  </select>
  
   <select id="findButtonListByMenuList" resultMap="BaseResultMap"  parameterType="java.util.List"  >
  	select 
    <include refid="Base_Column_List" />
    from SYS_RESOURCE
    <where> 
    	TYPE = '2' and STATUS = 1 and PARENT_ID IN
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
      #{item}
    </foreach>
    </where>
  </select>
  
  <!-- 根据用户获取当前用户拥有的资源 -->
  <select id="findResourcesByUserAccount" resultMap="BaseResultMap" parameterType="java.lang.String" >
	select h.*
		from SYS_RESOURCE h , SYS_USER u , SYS_ROLE r, SYS_ROLE_RESOURCE rr,SYS_USER_ROLE ur
    where 
      u.ID = ur.USER_ID and  r.ID = ur.ROLE_ID 
	  and r.ID = rr.ROLE_ID and h.id = rr.RESOURCE_ID
	  and u.ACCOUNT = #{userAccount,jdbcType=VARCHAR}	
  </select>
  
  <select id="findResourceByName" resultMap="BaseResultMap" parameterType="com.cn.platform.security.entity.Resource" >
  	select 
    <include refid="Base_Column_List" />
    from SYS_RESOURCE
    <where> 
    	TYPE = #{type} and NAME = #{name}
    </where>
  </select>
  
  <select id="findResourceByCode" resultMap="BaseResultMap" parameterType="com.cn.platform.security.entity.Resource" >
  	select 
    <include refid="Base_Column_List" />
    from SYS_RESOURCE
    <where> 
    	TYPE = #{type} and CODE = #{code}
    </where>
  </select>
  
  <select id="findAllResource" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from SYS_RESOURCE
    <where> 
    	STATUS = 1
    </where>
  </select>
  <select id="findDataAuthorityResources" resultMap="BaseResultMap">
     select  
     <include refid="Base_Column_List" />
     from SYS_RESOURCE
     <where> 
        STATUS = 1 and CLASS_NAME > '0' and DATA_AUTHORITY_CODE > '0'
     </where>
  </select>
  
  <delete id="deleteResourceByParentId" parameterType="java.util.Map">
  	DELETE FROM SYS_RESOURCE
  	WHERE PARENT_ID = #{parentId,jdbcType=VARCHAR}
  	<if test="type != null and type != ''">
  		AND TYPE = #{type,jdbcType=VARCHAR}
  	</if>
  </delete>
  
  <select id="findAllSubIdByParentId" resultType="java.lang.String" parameterType="java.lang.String" >
    select getResourceChildList(#{parentIds,jdbcType=VARCHAR})
  </select>
  
  <select id="queryResourceByRoleIds" resultMap="BaseResultMap"  parameterType="java.util.List">
  	SELECT distinct res.ID, res.NAME, res.REMARK, res.TYPE, res.STATUS, res.CODE, res.OPERATION_TYPE,
    				res.PARENT_ID, res.VALUE, res.SORT, res.CLASS_NAME ,res.DATA_AUTHORITY_CODE
    from SYS_ROLE_RESOURCE rr ,SYS_RESOURCE res , SYS_ROLE r 
	where rr.RESOURCE_ID = res.id and rr.ROLE_ID = r.ID and r.id in 
	<foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
      	#{item}
    </foreach>
  </select>
  
  <select id="findAllRootReource" resultMap="BaseResultMap" >
    SELECT * FROM SYS_RESOURCE WHERE PARENT_ID = ''
  </select>
</mapper>