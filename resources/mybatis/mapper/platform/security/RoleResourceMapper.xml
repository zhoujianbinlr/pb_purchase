<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.platform.security.entity.RoleResource" >
  <resultMap id="BaseResultMap" type="com.cn.platform.security.entity.RoleResource" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="ROLE_ID" property="roleId" jdbcType="VARCHAR" />
    <result column="RESOURCE_ID" property="resourceId" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, ROLE_ID, RESOURCE_ID, STATUS
  </sql>
  <select id="findAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from SYS_ROLE_RESOURCE
  </select>
  
  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from SYS_ROLE_RESOURCE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteById" parameterType="java.lang.String" >
    delete from SYS_ROLE_RESOURCE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="batchDelete" parameterType="java.util.List" >
    delete from SYS_ROLE_RESOURCE where ID in 
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
      #{item}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.cn.platform.security.entity.RoleResource" >
    insert into SYS_ROLE_RESOURCE (ID, ROLE_ID, RESOURCE_ID, 
      STATUS)
    values (#{id,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{resourceId,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertWithoutNull" parameterType="com.cn.platform.security.entity.RoleResource" >
    insert into SYS_ROLE_RESOURCE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="roleId != null" >
        ROLE_ID,
      </if>
      <if test="resourceId != null" >
        RESOURCE_ID,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="resourceId != null" >
        #{resourceId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.cn.platform.security.entity.RoleResource" >
    update SYS_ROLE_RESOURCE
    <set>
      <if test="roleId != null" >
        ROLE_ID = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="resourceId != null" >
        RESOURCE_ID = #{resourceId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateById" parameterType="com.cn.platform.security.entity.RoleResource" >
    update SYS_ROLE_RESOURCE
    set ROLE_ID = #{roleId,jdbcType=VARCHAR},
      RESOURCE_ID = #{resourceId,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="findRoleResource" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select 
    <include refid="Base_Column_List" />
    from SYS_ROLE_RESOURCE
    <where> 
    	1=1 and ROLE_ID = #{roleId,jdbcType=VARCHAR}
    </where>
  </select>
  
  <select id="findResourceRole" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select 
    <include refid="Base_Column_List" />
    from SYS_ROLE_RESOURCE
    <where> 
    	1=1 and RESOURCE_ID = #{resourceId,jdbcType=VARCHAR}
    </where>
  </select>
  
  <select id="findRoleResourceList" resultMap="BaseResultMap"  parameterType="java.util.List">
  	select 
    <include refid="Base_Column_List" />
    from SYS_ROLE_RESOURCE
    <where> 
    	1=1 and ROLE_ID IN 
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
      #{item}
    </foreach>
    </where>
  </select>
  
  <select id="findResourceRoleList" resultMap="BaseResultMap"  parameterType="java.util.List">
  	select 
    <include refid="Base_Column_List" />
    from SYS_ROLE_RESOURCE
    <where> 
    	1=1 and RESOURCE_ID IN
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
      #{item}
    </foreach>
    </where>
  </select>
  
  <delete id="deleteByResourceIds" parameterType="java.util.List" >
    DELETE FROM SYS_ROLE_RESOURCE WHERE RESOURCE_ID IN 
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
        #{item}
    </foreach>
  </delete>
  
  <delete id="deleteByRoleIds" parameterType="java.util.List" >
    DELETE FROM SYS_ROLE_RESOURCE WHERE ROLE_ID IN 
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
        #{item}
    </foreach>
  </delete>
  
  <insert id="batchInsert" parameterType="java.util.List">
    insert into SYS_ROLE_RESOURCE (ID, ROLE_ID, RESOURCE_ID, STATUS)
    values 
    <foreach collection="list" item="roleResource" index="index" separator="," >
      (#{roleResource.id,jdbcType=VARCHAR}, #{roleResource.roleId,jdbcType=VARCHAR},#{roleResource.resourceId,jdbcType=VARCHAR}, #{roleResource.status,jdbcType=INTEGER})
    </foreach>
  </insert>
  
  
</mapper>