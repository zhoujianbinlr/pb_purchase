<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.platform.security.entity.UserRole" >
  <resultMap id="BaseResultMap" type="com.cn.platform.security.entity.UserRole" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="ROLE_ID" property="roleId" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, USER_ID, ROLE_ID, STATUS
  </sql>
  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from SYS_USER_ROLE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteById" parameterType="java.lang.String" >
    delete from SYS_USER_ROLE where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByUserId" parameterType="java.lang.String" >
  	delete from SYS_USER_ROLE where USER_ID = #{userId,jdbcType=VARCHAR}
  </delete>
  
  <delete id="delete" parameterType="java.lang.String" >
    delete from SYS_USER_ROLE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
 <delete id="deleteByIds" parameterType="java.util.List" >
    delete from SYS_USER_ROLE where ID in 
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
      #{item}
    </foreach>
  </delete>
  <delete id="deleteByRoleIds" parameterType="java.util.List" >
    delete from SYS_USER_ROLE where ROLE_ID in 
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
      #{item}
    </foreach>
  </delete>
  
  <insert id="insert" parameterType="com.cn.platform.security.entity.UserRole" >
    insert into SYS_USER_ROLE (ID, USER_ID, ROLE_ID, 
      STATUS)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  
  <insert id="batchInsert" parameterType="java.util.List">
    insert into SYS_USER_ROLE (ID, USER_ID, ROLE_ID, STATUS)
    values 
    <foreach collection="list" item="userRole" index="index" separator="," >
      (#{userRole.id,jdbcType=VARCHAR}, #{userRole.userId,jdbcType=VARCHAR},#{userRole.roleId,jdbcType=VARCHAR}, #{userRole.status,jdbcType=INTEGER})
    </foreach>
  </insert>
  
  <insert id="insertWithoutNull" parameterType="com.cn.platform.security.entity.UserRole" >
    insert into SYS_USER_ROLE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="roleId != null" >
        ROLE_ID,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.cn.platform.security.entity.UserRole" >
    update SYS_USER_ROLE
    <set>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        ROLE_ID = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateById" parameterType="com.cn.platform.security.entity.UserRole" >
    update SYS_USER_ROLE
    set USER_ID = #{userId,jdbcType=VARCHAR},
      ROLE_ID = #{roleId,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
   <select id="findUserRoleByRole" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select 
    <include refid="Base_Column_List" />
    from SYS_USER_ROLE
    <where> 
    	1=1 and ROLE_ID = #{roleId,jdbcType=VARCHAR}
    </where>
  </select>
  
  <select id="findUserRoleByUser" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select 
    <include refid="Base_Column_List" />
    from SYS_USER_ROLE
    <where> 
    	1=1 and USER_ID = #{userId,jdbcType=VARCHAR}
    </where>
  </select>
  
   <select id="findUserRoleByRoleList" resultMap="BaseResultMap" parameterType="java.util.List">
  	select 
    <include refid="Base_Column_List" />
    from SYS_USER_ROLE
    <where> 
    1=1 and ROLE_ID IN
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
      #{item}
    </foreach>
    </where>
  </select>
  
  <select id="findUserRoleByUserList" resultMap="BaseResultMap" parameterType="java.util.List">
  	select 
    <include refid="Base_Column_List" />
    from SYS_USER_ROLE
    <where> 
    	1=1 and USER_ID IN
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
      #{item}
    </foreach>
    </where>
  </select>
</mapper>